#!/bin/bash

SCRIPT=fb-login
LOGFILE=/var/log/busy4me.log
source /opt/busy4me/busy-functions # global functions
source /opt/busy4me/fb/fb-config # fb variables from there

if [[ "$1" == "--debug" ]]; then
  exec &> >(tee -ia $LOGFILE)
  exec 2>&1
fi

echo "fb-login start" > /opt/busy/fb/fb-status

# move mouse away...
echo -e "\e[33m move mouse away....\e[0m" | logline
xdotool mousemove 90 45
# update date before login....
echo "update date before login...." | logline
ntpdate -s time.nist.gov | logline &&

echo "is it mobile login page? ..."

#xdotool search --sync --onlyvisible --name "$SPOT01" windowunmap windowmap | logline
xdotool search --onlyvisible --class chrome | logline
xdotool search --onlyvisible --class chrome windowactivate | logline
xdotool search --onlyvisible --name "$SPOT01" | logline
xdotool search --onlyvisible --name "$SPOT01" windowactivate | logline
#xdotool search --sync --onlyvisible --name "$SPOT01" windowactivate | logline
echo -e "\e[33m...refresh current page\e[0m"
xdotool key --delay 200 Ctrl+l Ctrl+a | logline
xdotool key --delay 200 Return
sleep 5; echo "...sleep 5s"
echo -e "\e[33m ... select and copy ... \e[0m"
xdotool key --delay 200 Ctrl+a Ctrl+c | logline
echo "...all selected and unselect ...."
xdotool key --delay 200 Ctrl+Shift+a | logline
clip=$( xclip -out -selection clipboard )
echo "zenity message ..."
zenity --info --title="clipboard" --text="$clip" --timeout $to

echo "is it english? ... is it logged? ..."
mark01='Create an account' #special sign from the MAIN LOGIN site
mark02='Create New Account' #special sign from the MAIN LOGIN site
case "$clip" in
    *$mark01*)
	echo -e "\e[31mMain login page...Not logged\e[0m"
	zenity --info --title="clipboard" --text="Mine login page...not logged..." --timeout $to
  ;;
    *$mark02*)
	echo -e "\e[31m Mobile login page...Not logged\e[0m"
	zenity --info --title="clipboard" --text="Mobile login page...not logged..." --timeout $to
  ;;
    *)
	zenity --question --title="Status" --text="What is the page status?" --timeout $to
  ;;
esac

report_fb_login_done () {
  while  [ 1 ]; do
    echo -e "\e[33m[OK] ... report: 'fb-login done' and sleep 1 day \e[0m"
    echo "fb-login done" > /opt/busy/fb/fb-status
    sleep 86400 # sleep 1 day
  done
}

accept_cookies () {
  echo "accept cookies... "
  locate -i button_blue_allow_all_cookies.png -a click
}

change_language () {
  echo "change language...."
#  sleep 2
#  locate -i 800x600-ch75%-button-EnglishUS-bg=grey.png -a click
}

# open mobile page...
open_mobile_page () {
  echo -e "\e[33m      ...open mobile page...\e[0m"
  xdotool search --sync --onlyvisible --name "$SPOT01" windowactivate | logline
  xdotool key --delay 200 Ctrl+l | logline
  xdotool type $login_url
  xdotool key --delay 200 Return
  sleep 5
}

open_mobile_page
accept_cookies
change_language

echo -e "\e[33m      ...         ...set variables ...\e[0m"
empty01=""
mark02='Forgotten'
mark022='Forgot Password'
mark023='Forgot password'
mark03='Help Centre'
mark04='Facebook'
mark05='https://m.facebook.com'
mark06='Cookies Policy'
mark07="What's on your mind"
mark08="Log in with one tap"
mark09="Save your password now to make logging in even easier."
mark10="Enter email address or phone number"
mark11="Enter password"
mark12="temporarily locked"
mark13="Tap to log in"
mark14="I want to update Chrome"
mark15="Allow the use of cookies from Facebook"
mark16="You can allow the use of all cookies"
# empty file for blank clipboard
touch /opt/busy/files/blank

# login data insert by zenity dialog
#===================================================================================================
#== Function =======================================================================================
#===================================================================================================
login_insert () {
while [[ ! $_valid == "OK" ]]; do
	rm -rf /opt/busy/fb/* # remove old files

    OUTPUT=$(sleep 1 && wmctrl -r "Login" -b add,above -e 1,430,470,240,250 & zenity --forms --title="Login" --text="Social Media Automation Studio\n\\n\...to continue, enter Facebook login and password below\n\n" --separator="," --add-entry="Login (email)" --add-entry="Password" --width 450 --height 180)
	accepted=$?
	if ((accepted != 0)); then
		echo -e "\e[32m Start again...\e[0m" | logline
		zenity --info --title="Prepare to login" --text="Social Media Assistant:\n You must be logged before using busy4.me platform ... try again ... " --width 350 --timeout 7
		login_start
	fi

	login=$(awk -F, '{print $1}' <<<$OUTPUT)
	password=$(awk -F, '{print $2}' <<<$OUTPUT)
	echo $login | tee /opt/busy/fb/fb-login
	echo $password | tee /opt/busy/fb/fb-password

# email validation
  _regex="^([A-Za-z]+[A-Za-z0-9]*((\.|\-|\_)?[A-Za-z]+[A-Za-z0-9]*){1,})@(([A-Za-z]+[A-Za-z0-9]*)+((\.|\-|\_)?([A-Za-z]+[A-Za-z0-9]*)+){1,})+\.([A-Za-z]{2,})+$"
    if [[ $login =~ ${_regex} ]]; then
      printf "* %-48s \e[1;32m[pass]\e[m\n" "$login"
      zenity --info --title="login validation" --text="Social Media Assistant:\n login=$login get ready..." --width 350 --height 150 --timeout 2
      _valid="OK"
    else
      printf "* %-48s \e[1;31m[fail]\e[m\n" "$login"
      zenity --info --title="login validation" --text="Social Media Assistant:\n login=$login incorrect format... \n shuld be email like something@domain.xxx" --width 350 --height 150 --timeout 7
    fi
done
}
#===================================================================================================
#== Function =======================================================================================
#===================================================================================================
login_start () {
	echo "Check login................................................"
	login_source="/opt/busy/fb/fb-login"
	password_source="/opt/busy/fb/fb-password"
	login=$(cat "$login_source")
	password=$(cat "$password_source")

	if [ -s $login_source ];then
		echo -e "\e[32m file $login_source exists and is not empty \e[0m" | logline
	else
		echo -e "\e[31m There is no login file, create one \e[0m" | logline
		mkdir -p /opt/busy/fb | logline
		mkdir -p /opt/busy/scrot | logline
		touch /opt/busy/fb/fb-login | logline
		touch /opt/busy/fb/fb-password | logline
		login_insert
	fi

	zenity --info --title="Prepare to login" --text="Prepare to login as $login" --timeout 3

	sleep 1 && wmctrl -r "Login" -b add,above &
	(
	echo "1" ; sleep 1
	echo "20" ; sleep 1
	echo "40" ; sleep 1
	echo "60" ; sleep 1
	echo "70" ; sleep 1
	echo "80" ; sleep 1
	echo "90" ; sleep 1
	echo "100" ; sleep 1
	) | OUTPUT=$(zenity --progress \
	  --title="Login" \
	  --text="Prepare to login as: $login \n\ Can be cancelled and changed at this time only. \n\ Click Cancel if you need login as different user." \
	  --percentage=0 \
	  --width 400 \
	  --height 100 \
	  --auto-close \
	  --auto-kill)
	accepted=$?
	if ((accepted != 0)); then
		echo "accepted=$accepted Login cancelled... Login insert start..."
		login_insert
  else
    echo "accepted=$accepted OK, continue login..."
	fi

	(( $? != 0 )) && zenity --error --text="Error in zenity command. Start again ..." --timeout $to
}

login_start

login_string=$login
echo -e "\e[42m\e[0m"$login_string | logline
login_string=$(echo $login_string | tr '@.' '-')
echo -e '\e[32mlogin_string =\e[0m' $login_string | logline

# create sqlite database
# there can be more databases, each for one user
user_db="/opt/busy/fb/db/fb_$login_string.db"
echo -e "\e[42m\e[30m user_db = \e[0m\e[32m" $user_db "\e[0m" | logline

touch /opt/busy/fb/fb-name | logline
touch /opt/busy/fb/fb-first-name | logline
touch /opt/busy/fb/fb-last-name | logline

#===================================================================================================
#== Function =======================================================================================
#===================================================================================================
create_database () {
if [ -s $user_db ];then
	rows=$(sqlite3 $user_db  "SELECT COUNT (*) FROM fb_groups";)
	echo -e "\e[32mBase fb_$login_string.db exists. There is " $rows " rows. Continue...\e[0m" | logline
    break
else
	echo -e "\e[31mThere is no $login_string database, create:\e[0m $login_string.db" | logline
	mkdir -p /opt/busy/fb/db
	# create sqlite3 local user database
	sqlite3 /opt/busy/fb/db/fb_$login_string.db "SELECT 1;"
	/bin/bash /opt/busy4me/busy DB --create all
	sqlite3 $user_db "SELECT COUNT (*) FROM fb_groups";
fi
}

create_database

# check if mobile facebook page is open
#===================================================================================================
#== Function =======================================================================================
#===================================================================================================
page_probe () {
for i in {1..1000} ; do
  probe_count=$((probe_count+1))
  if [ $probe_count -gt 5 ]; then
    xdotool key --delay $kd Tab
  fi
  if [ $probe_count -gt 10 ]; then
    open_mobile_page
    probe_count=0
  fi
  echo "... page_probe $probe_count"
	zenity --info --title="page_probe" --text="... page_probe $probe_count" --timeout 1
	xdotool search --sync --onlyvisible --name "$SPOT01" windowactivate
	xclip -selection clipboard /opt/busy/files/blank
	xdotool key --delay 200 Ctrl+a Ctrl+c Ctrl+Shift+a
	clip=$( xclip -out -selection clipboard )
		case "$clip" in
		*$mark10*)
			echo -e "\e[44m   \e[0m \e[34m Login page without password... mark10=$mark10 \e[0m"
			zenity --info --title="page_probe" --text="Login page without password...''$mark10''" --timeout $tol
			xdotool key --delay $kd Ctrl+f && xdotool type $mark10 && xdotool key --delay $kd Escape
			sleep 2
			xdotool key --delay $kd Ctrl+a Ctrl+c Ctrl+Shift+a
			clip=$( xclip -out -selection clipboard )
			if [ $clip = $empty01 ]
				then
				echo "This is empty clipboard, is it entry field? ..."
				zenity --info --title="Webpage content" --text="This is empty clipboard, is it entry field? ..." --timeout $to
				xdotool type --delay $kd $login
				xdotool key --delay $kd Ctrl+a Ctrl+c End
					clip=$( xclip -out -selection clipboard )
					if [ $clip = $login ]
					then
					xdotool key --delay $kd Return
					echo "Enter $login ..."
					zenity --info --title="Webpage content" --text="Enter $login ..." --timeout $to
					xdotool key --delay $kd Shift+Tab Ctrl+a Ctrl+c
					clip2=$( xclip -out -selection clipboard )
						case "$clip2" in
							*mark11*)
								xdotool key --delay $kd Tab && xdotool type $password && xdotool key Return
								zenity --info --title="Enter..." --text="Password, Enter." --timeout $tol
							;;
							*)
								echo "Error, can not put password?..."
							;;
						esac
					else
						echo "Error, is this entry field? ..."
						zenity --info --title="Webpage content" --text="Error, is this entry field? ..." --timeout $to
					fi
			fi
#			/bin/bash /opt/busy4me/fb/fb-scroll &
#			exit 0
		;;
		*"$mark09"*)
			echo -e "\e[42m   \e[0m \e[32m Logged successfuly... save-device page  mark09=$mark09 \e[0m" | logline
			zenity --info --title="page_probe" --text="Logged successfuly...save-device page" --timeout $tol
			sleep 2
			xdotool key --delay $kd Ctrl+l
      xdotool type --delay $kds $SPOT01url
      xdotool key Return
			sleep 2
#			/bin/bash /opt/busy4me/fb/fb-scroll &
      report_fb_login_done
			exit 0
		;;
		*"$mark08"*)
			echo -e "\e[42m   \e[0m \e[32m Logged successfuly... mark08=$mark08 \e[0m" | logline
			zenity --info --title="page_probe" --text="Logged successfuly..." --timeout $tol
			sleep 2
			xdotool key --delay $kd Ctrl+l
      xdotool type --delay $kds $SPOT01url
      xdotool key Return
			sleep 2
#			/bin/bash /opt/busy4me/fb/fb-scroll &
			report_fb_login_done
#      exit 0
		;;
		*"$mark07"*)
			echo -e "\e[42m   \e[0m \e[32m Logged successfuly... mark07=$mark07 \e[0m" | logline
			zenity --info --title="page_probe" --text="Logged successfuly..." --timeout $tol
			sleep 2
			xdotool key --delay $kd Ctrl+l
      xdotool type --delay $kds $SPOT01url
      xdotool key Return
			sleep 2
#			/bin/bash /opt/busy4me/fb/fb-scroll &
      report_fb_login_done
#			exit 0
		;;
		*"$mark02"*)
			echo -e "\e[43m   \e[0m \e[33m Login page OK... \e[0m mark02=$mark02 ... go to login..." | logline
			zenity --info --title="page_probe" --text="Login page OK I see text \"$mark02\"... go to login..." --timeout $tos
			login_start
      break
		;;
    *"$mark022"*)
			echo -e "\e[43m   \e[0m \e[33m Login page OK... \e[0m mark02=$mark022 ... go to login..." | logline
			zenity --info --title="page_probe" --text="Login page OK I see text \"$mark022\"... go to login..." --timeout $tos
			login_start
      break
		;;
    *"$mark023"*)
			echo -e "\e[43m   \e[0m \e[33m Login page OK... \e[0m mark02=$mark023 ... go to login..." | logline
			zenity --info --title="page_probe" --text="Login page OK I see text \"$mark023\"... go to login..." --timeout $tos
			login_start
      break
		;;
		*"$mark03"*)
			echo -e "\e[43m   \e[0m \e[33m Login page OK... \e[0m mark03=$mark03" | logline
			zenity --info --title="page_probe" --text="Login page OK I see text \"$mark03\"... go to login..." --timeout $tos
			login_start
		;;
		*"$mark12"*)
			repeat=148 # cron check log every 5min - 300sec, so this loop 148x2=296 sec
			while true
				do
				echo -e '\e[92mrepeat = ' $repeat | logline
				echo -e "\e[0m"
					for (( message=1; message<$repeat; message++ ))
					do
						echo -e "\e[41m --> \e[0m \e[31m temporarily locked ... \e[0m mark12=$mark12"
						zenity --info --title="page_probe" --text="Account $mark12... STOP \n\
						step $message of $repeat... \n\
						Infinite Loop" --timeout 	$tos
						sleep 2
						shift 1
					done
			done
		;;
		*"$mark13"*)
			xdotool key --delay $kd Ctrl+l
			xdotool type $fb_login_url
			xdotool key --delay $kd Return
			echo -e "\e[41m --> \e[0m \e[31m Login in cache... Tap to login... Switch to fb_login_url \e[0mmark13=$mark13" | logline
			zenity --info --title="Tap to login" --text="Login in cache... Tap to login... Switch to fb_login_url" --timeout $tol
			break
		;;
    *"$mark15"*|*"$mark16"*)
      echo -e "\e[44m   \e[0m \e[34m accept cookies... \e[0m" | logline
      zenity --info --title="accept cookies message" --text="accept cookies and check again..." --timeout $tos
      accept_cookies
    ;;
		*)
			echo -e "\e[44m   \e[0m \e[34m probe again... \e[0m" | logline
			zenity --info --title="page_probe" --text="probe again..." --timeout $tos
      accept_cookies
      change_language
		;;
		esac
done
}
echo -e "\e[33m...Entry to page_probe function ...\e[0m" | logline
page_probe
echo "clipboard clean ... execute:  xclip -selection clipboard /opt/busy/files/blank"

xclip -selection clipboard /opt/busy/files/blank
echo "login_saved_detect start"
#===================================================================================================
#== Function =======================================================================================
#===================================================================================================
login_saved_detect () {
	xdotool key --delay $kd Shift+Tab Ctrl+a Ctrl+c
	clip=$( xclip -out -selection clipboard )
	if [[ "$clip" == "$login" ]]; then
  		xdotool key --delay $kd Tab
      echo -e "\e[33m[insert]\e[0m ${FUNCNAME[0]}() \e[30m\e[45m Insert password... \e[33m \e[0m"
  		xdotool type --delay $kd $password
  		xdotool key --delay $kd Return
  		echo -e "\e[32m[Enter]\e[0m ${FUNCNAME[0]}() \e[30m\e[45m Login as:\e[33m $login ... \e[0m"
	fi
}
login_saved_detect

# do login...
xdotool search --sync --onlyvisible --name "$SPOT01" windowactivate | logline

xclip -selection clipboard /opt/busy/files/blank
echo "entry_detect start"
entry01=0

#===================================================================================================
#== Function =======================================================================================
#===================================================================================================
entry_detect () {
xdotool key --delay $kd Ctrl+l Ctrl+a Ctrl+c
clip=$( xclip -out -selection clipboard )
if [[ "$clip" == "$mark05" ]]; then
	echo -e "\e[32m[OK]\e[0m ${FUNCNAME[0]}() \e[32m This is mobile login page URL OK...\e[0m  $mark05"
fi
while [ $entry01 -lt 2 ]; do
	xclip -selection clipboard /opt/busy/files/blank
	xdotool key --delay $kd Tab Ctrl+a Ctrl+c Ctrl+Shift+a
	clip=$( xclip -out -selection clipboard )

	case "$clip" in
		*"$mark07"*)
			echo -e "\e[32m[OK]\e[0m ${FUNCNAME[0]}() \e[32m Logged successfuly... switch to fb.com...\e[0m  $mark05"
			zenity --info --title="page_probe" --text="Logged successfuly... switch to fb.com ..." --timeout $tol
			xdotool key --delay $kd Ctrl+l
			xdotool type $SPOT01url
			xdotool key --delay $kd Return
#			/bin/bash /opt/busy4me/fb/fb-scroll &
			report_fb_login_done
#      exit 0
		;;
		*"$mark04"*)
			echo "The content with $mark04 .."
			zenity --info --title="Webpage content" --text="The content with word: $mark04 .. ..." --timeout $to
		;;
		*"$mark05"*)
			echo "This is URL entry bar with $mark05 address."
			zenity --info --title="Url entry bar" --text="This is URL entry bar with $mark05 address." --timeout $to
		;;
		$empty01)
			echo "This is empty clipboard, is it entry field? ..."
			zenity --info --title="Webpage content" --text="This is empty clipboard, is it entry field? ..." --timeout $to
			entry01=$((entry01+1))
			echo "entry01 = $entry01"
			#zenity --info --title="entry" --text="entry01 = $entry01" --timeout $to
		;;
		*)
			echo "This is something else ... what is it?"
			#zenity --info --title="Webpage content" --text="This is something else ... what is it?" --timeout $to
		;;

	esac
done
}
entry_detect

echo -e "\e[42m\e[30m OK --> \e[0m Entry field OK, login in progress ..."
zenity --info --title="End" --text="This is 2nd entry field... pass" --timeout $to
# there are more different loging pages,
# 1. with login field: "Mobile number or email address" and pass field: "Password"+"Show" button
# 2. with login field: "Email address"+"USE MOBILE" button and pass field "Password"+"SHOW" button
# 3. with login field: "Mobile number or email address" and pass field: "Password" with no button
# so the second one needs additional Shift+Tab key and when go back to pass, additional Tab key

insert_login_and_password () {
  while [[ ! "$clip" == "$login" ]]; do
    xdotool key --delay $kd Shift+Tab
    echo -e "\e[33m[insert]\e[30m\e[45m Insert login: \e[33m $login\e[0m"
    xdotool type --delay $kd $login
    xclip -selection clipboard /opt/busy/files/blank
    echo -e "\e[32m[Enter]\e[0m ${FUNCNAME[0]}() \e[30m\e[45m Check if login inserted... \e[0m"
    xdotool key --delay $kd Ctrl+a Ctrl+c
    clip=$( xclip -out -selection clipboard )
    count01=$((count01+1))
  done
  if [ $count01 -gt 1 ]; then
    echo -e "\e[30m\e[45m Switch to the next field... key:Tab\e[33m\e[0m"
    xdotool key --delay $kd Tab
  fi
  xdotool key --delay $kd Tab
  xdotool type --delay $kd $password
  xdotool key --delay $kd Tab Ctrl+a Ctrl+c Ctrl+Shift+a Shift+Tab
  clip=$( xclip -out -selection clipboard )
  case "$clip" in
  	*SHOW*)
  	echo -e "\e[36m[info]\e[0m ${FUNCNAME[0]}() \e[42m\e[30m OK -> \e[0m\e[32m Looks good? Enter?... \e[0m\e[44mEnter\e[0m"
  	zenity --info --title="Ok" --text="Looks good? Enter?..." --timeout $tos
    sleep 2
  	xdotool key --delay $kd Return
  	echo -e "\e[33m[Enter]\e[0m ${FUNCNAME[0]}() \e[32m\e[42m   \e[0m \e[32m ... yes, Enter. \e[0m"
  	zenity --info --title="Ok" --text="Yes, Enter." --timeout $tol
  		# check page if login ok, maybe blocked locked account
  			sleep 5
  			xclip -selection clipboard /opt/busy/files/blank
  			xdotool key --delay $kd Ctrl+a Ctrl+c Ctrl+Shift+a
  			clip2=$( xclip -out -selection clipboard )
  		case "$clip2" in
  		*"$mark12"*)
  			repeat=250 # cron check log every 5min - 300sec, so this loop 290 sec
  			while true
  				do
  				echo -e 'repeat = ' $repeat | logline
  				echo -e ""
  					for (( message=1; message<$repeat; message++ ))
  					do
  						echo -e "\e[41m   \e[0m \e[31m Account $mark12... STOP \e[0m"
  						date_now=$(date)
  						zenity --info --title="page_probe" --text="Account $mark12... STOP \n\
  						step $message of $repeat... \n\
  						$date_now \n\
  						Infinite Loop" --timeout $tos
  						shift 1
  					done
  			done
  		;;
  		*)
  			zenity --info --title="page_probe" --text="Looks OK... next step..." --timeout	$tos
  			sleep 2
  		;;
  		esac
  	;;
  	*)
  	echo -e "\e[31m[Error]\e[0m ${FUNCNAME[0]}()\e[31m Something wrong? Can not see indicator: SHOW...\e[0m Try login again ..."
  	zenity --info --title="Ok" --text="Something wrong? Can not see SHOW... Try login again ..." --timeout $tol
  	# again
  	login_start
  	# exit 0
  	;;
  esac
}

insert_login_and_password

xdotool key --delay $kd Ctrl+l Ctrl+a
xdotool type --delay $kd $login_url
xdotool key --delay $kd Return
echo "Select URL bar and enter $login_url..."
zenity --info --title="Select URL bar" --text="Select URL bar and enter $login_url..." --timeout $tol
page_probe
echo -e "\e[33m This is End of $SCRIPT script\e[0m"
zenity --info --title="End" --text="This is End of $SCRIPT script" --timeout $to
