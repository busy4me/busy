#!/bin/bash
_START=$(date +%s) # calculate how long script runs (see on the end)
SCRIPT=fb-test
LOGFILE=/var/log/busy4me.log
STATFILE=/var/log/busy4me-nocolor.log # log file without escape characters, used for time series databases (eg.influxdb-telegraf-grok)
source /opt/busy4me/busy-functions # global functions
source /opt/busy4me/fb/fb-config # fb variables from there

old_logline() {
    while IFS= read -r line; do
        echo "$(date +%F' '%T) $USER $SCRIPT - $line" | tee -a $LOGFILE
    done
}

logline() { # get line and send to log file
    while IFS= read -r line; do
      echo -e "$(date +%F' '%T)" "$USER $SCRIPT $line${nocolor}" | tee -ia $LOGFILE
      echo -e "$(date +%F' '%T)" "$USER $SCRIPT $line${nocolor}" | sed 's,\x1B\[[0-9;]*[a-zA-Z],,g' | tee -ia $STATFILE
#      printf '%s %s\n' "$(date +%F' '%T)" "$line" | tee -ia $LOGFILE
    done
}

debug_set () {
  echofunc "${FUNCNAME[0]}""<< ${FUNCNAME[1]}""<< ${FUNCNAME[2]}""<< ${FUNCNAME[3]}"
  if [[ "$1" == "--debug" ]] || [[ "$verbose" == "true" ]]; then
    echoinfo "verbose, FUNCNAME=${FUNCNAME[0]}, comment=set verbose mode by exec | tee =========================="
#    exec &> >(tee -ia $LOGFILE)
    exec &> >(logline)
    exec 2>&1
  fi
}

extra_pause() {
  function_start=$(date +%s) # calculate how long script runs (see on the end)
  echofunc "${FUNCNAME[0]}""<< ${FUNCNAME[1]}""<< ${FUNCNAME[2]}""<< ${FUNCNAME[3]}"
  pause_status=1
  while [ $pause_status = 1 ]; do
    H=$(date +%k)
    if (( 6 <= $H && $H < 12 )); then
      pause_status=0
      echoinfo "keepgoing, H=$H, FUNCNAME=${FUNCNAME[0]}, comment=keep going..."
      return
    elif (( 13 <= $H && $H < 15 )); then
      pause_status=0
      echoinfo "keepgoing, H=$H, FUNCNAME=${FUNCNAME[0]}, comment=keep going..."
      return
    elif (( 17 <= $H && $H < 22 )); then
      pause_status=0
      echoinfo "keepgoing, H=$H, FUNCNAME=${FUNCNAME[0]}, comment=keep going..."
      return
    else
      pause_status=1
    	echoinfo "extra_pause, H=$H, FUNCNAME=${FUNCNAME[0]}, comment=go to bed..."
    fi
    extra_pause=3600
    echoinfo "sleep, H=$H, FUNCNAME=${FUNCNAME[0]}, comment=sleep 1h if outside hours..."
    zenity --info --title="extra pause" --text="Extra pause: $extra_pause sec\n\n OK, ..." --width 210 --height 140  --timeout $extra_pause
#    sleep 3600 # sleep 1h if outside hours
  done
}

extra_pause
